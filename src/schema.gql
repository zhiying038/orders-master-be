# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Item {
  code: String!
  name: String!
  price: Float!
  currency: String!
}

type Order {
  id: String!
  referenceNumber: String!
  totalPrice: Float!
  currency: String!
  createdAt: DateTime!
  orderDetails: [OrderDetail!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Orders {
  items: [Order!]!
  total: Int!
  hasMore: Boolean!
  page: Int!
  pages: Int!
}

type OrderDetail {
  id: String!
  unitPrice: Float!
  quantity: Int!
  item: Item!
  order: Order!
}

type Price {
  currency: String!
  price: Float!
}

type Query {
  getItemByCode(code: String!): Item!
  getItems: [Item!]!
  getPaginatedOrders(options: CommonFilterOptionInput!, filter: FilterOrderInput): Orders!
  getOrderById(id: Int!): Order!
  calculateTotalPrice(input: PlaceOrderInput!): Price!
}

input CommonFilterOptionInput {
  page: Int = 1
  limit: Int = 10
  sortKey: String
  sortOrder: SortOrder = ASC
}

enum SortOrder {
  ASC
  DESC
}

input FilterOrderInput {
  id: Int
  createdAt: DateTime
}

input PlaceOrderInput {
  createdAt: DateTime
  orders: [CreateOrderDetailInput!]!
}

input CreateOrderDetailInput {
  quantity: Int!
  unitPrice: Float!
  itemCode: String!
  orderId: Float
}

type Mutation {
  createItem(input: CreateItemInput!): Item!
  updateItem(input: UpdateItemInput!): Item!
  deleteItems(codes: [String!]!): Boolean!
  createOrder(input: PlaceOrderInput!): Order!
}

input CreateItemInput {
  code: String!
  name: String!
  price: Float!
  currency: String
}

input UpdateItemInput {
  code: String!
  name: String
  price: Float
  currency: String
}